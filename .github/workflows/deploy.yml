name: Deploy ststas.dev/storybook

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > aws_rsa.pem
          chmod 600 aws_rsa.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Debug private key
        run: |
          cat aws_rsa.pem | head -n 5
          ls -l aws_rsa.pem

      - name: Check SSH connection
        run: |
          ssh -i aws_rsa.pem -v -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP
        env:
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Upload project to server
        run: |
          ssh -i aws_rsa.pem -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP "mkdir -p /home/ubuntu/storybook && chmod 777 /home/ubuntu/storybook"
          rsync -avz --progress -e "ssh -i aws_rsa.pem -o StrictHostKeyChecking=no" ./ ubuntu@$AWS_LS_IP:/home/ubuntu/storybook
        env:
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Build storybook on server
        run: |
          ssh -i aws_rsa.pem -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP << 'EOF'
            # Ensure Node.js and npm are available
            if ! command -v npm >/dev/null 2>&1; then
              echo "npm not found. Please install Node.js on the server."
              exit 1
            fi

            # Optional swapfile setup (can be removed if not needed)
            if [ ! -f /swapfile ]; then
              sudo fallocate -l 1G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              echo "/swapfile none swap sw 0 0" | sudo tee -a /etc/fstab
            fi

            cd /home/ubuntu/storybook

            npm ci
            npm run build-storybook

            ls -lah storybook-static

            echo "âœ… Storybook built successfully"
          EOF
        env:
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
